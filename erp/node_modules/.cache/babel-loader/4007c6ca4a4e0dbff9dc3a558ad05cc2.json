{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\New folder\\\\erp\\\\src\\\\components\\\\PasswordForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Link, useHistory } from 'react-router-dom';\nimport { BiLogIn } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PasswordForm(props) {\n  _s();\n\n  const [inputField, setInputField] = useState({\n    otpCode: '',\n    password: '',\n    cpassword: ''\n  });\n  const history = useHistory();\n  const [errField, setErrField] = useState({\n    otpCodeErr: '',\n    passwordErr: '',\n    cpasswordErr: ''\n  });\n\n  const validForm = () => {\n    let formIsValid = true;\n    setErrField({\n      otpCodeErr: '',\n      passwordErr: '',\n      cpasswordErr: ''\n    });\n\n    if (inputField.otpCode == '') {\n      formIsValid = false;\n      setErrField(prevState => ({ ...prevState,\n        otpCodeErr: 'Please Enter Email'\n      }));\n    }\n\n    if (inputField.password == '') {\n      formIsValid = false;\n      setErrField(prevState => ({ ...prevState,\n        passwordErr: 'Please Enter Password'\n      }));\n    }\n\n    if (inputField.cpassword == '') {\n      formIsValid = false;\n      setErrField(prevState => ({ ...prevState,\n        cpasswordErr: 'Please Enter Confirm Password'\n      }));\n    }\n\n    if (inputField.cpassword != '' && inputField.password != inputField.cpassword) {\n      formIsValid = false;\n      setErrField(prevState => ({ ...prevState,\n        cpasswordErr: 'Password are not matched '\n      }));\n    }\n\n    return formIsValid;\n  };\n\n  const inputHandler = e => {\n    setInputField({ ...inputField,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitButton = async () => {\n    if (validForm()) {\n      Object.assign(inputField, props);\n      let url = 'http://localhost:8080/users/change-password';\n      let options = {\n        method: 'POST',\n        url: url,\n        data: inputField\n      };\n\n      try {\n        let response = await axios(options);\n        console.log(response);\n\n        if (response.data.statusText == 'Success') {\n          toast.success(response.data.message);\n          setTimeout(() => {\n            history.push('/login');\n          }, 1500);\n        } else {\n          toast.error(response.data.message);\n        }\n      } catch (e) {\n        toast.error(\"Something Went Wrong!\");\n      }\n    } else {\n      toast.error(\"Form Invalid!\");\n    }\n  };\n\n  const changePassword = async () => {\n    history.push('/reset-password');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    action: \"\",\n    method: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Otp Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        name: \"otpCode\",\n        maxLength: \"4\",\n        autoComplete: \"off\",\n        value: inputField.otpCode,\n        onChange: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), errField.otpCodeErr.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errField.otpCodeErr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\",\n        autoComplete: \"off\",\n        value: inputField.password,\n        onChange: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), errField.passwordErr.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errField.passwordErr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 56\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"cpassword\",\n        autoComplete: \"off\",\n        value: inputField.cpassword,\n        onChange: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), errField.cpasswordErr.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errField.cpasswordErr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: submitButton,\n        children: \"Change Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PasswordForm, \"W7egjZ660p30eOlj6mhoD7ekLss=\", false, function () {\n  return [useHistory];\n});\n\n_c = PasswordForm;\nexport default PasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordForm\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/New folder/erp/src/components/PasswordForm.js"],"names":["React","useState","axios","ToastContainer","toast","Link","useHistory","BiLogIn","PasswordForm","props","inputField","setInputField","otpCode","password","cpassword","history","errField","setErrField","otpCodeErr","passwordErr","cpasswordErr","validForm","formIsValid","prevState","inputHandler","e","target","name","value","submitButton","Object","assign","url","options","method","data","response","console","log","statusText","success","message","setTimeout","push","error","changePassword","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Link, useHistory } from 'react-router-dom';\nimport { BiLogIn } from \"react-icons/bi\";\n\nfunction PasswordForm(props) {\n\n    const [inputField, setInputField] = useState({\n        otpCode: '',\n        password: '', \n        cpassword: '',\n    })\n    const history = useHistory()\n    const [errField, setErrField] = useState({\n\n        otpCodeErr: '',\n        passwordErr: '',\n        cpasswordErr: '',\n    })\n    const validForm = () => {\n        let formIsValid = true;\n        setErrField({\n            otpCodeErr: '',\n            passwordErr: '',\n            cpasswordErr: '',\n        })\n        if (inputField.otpCode == '') {\n            formIsValid = false\n            setErrField(prevState => ({\n                ...prevState, otpCodeErr: 'Please Enter Email'\n            }))\n        }\n        if (inputField.password == '') {\n            formIsValid = false\n            setErrField(prevState => ({\n                ...prevState, passwordErr: 'Please Enter Password'\n            }))\n        }\n        if (inputField.cpassword == '') {\n            formIsValid = false\n            setErrField(prevState => ({\n                ...prevState, cpasswordErr: 'Please Enter Confirm Password'\n            }))\n        }\n        if(inputField.cpassword !='' && inputField.password != inputField.cpassword){\n            formIsValid = false \n            setErrField(prevState=>({\n                ...prevState,cpasswordErr:'Password are not matched '\n            }))\n        } \n        return formIsValid\n    }\n    const inputHandler = (e) => {\n        setInputField({ ...inputField, [e.target.name]: e.target.value })\n    }\n\n    const submitButton = async () => {\n        if (validForm()) {\n            Object.assign(inputField,props) \n            let url = 'http://localhost:8080/users/change-password'\n            let options = {\n                method: 'POST',\n                url: url, \n                data: inputField\n            }\n            try {\n                let response = await axios(options)\n                console.log(response)\n                if (response.data.statusText == 'Success') {\n                    toast.success(response.data.message);\n                  setTimeout(()=>{\n                    history.push('/login')\n                  },1500)\n                } else {\n                    toast.error(response.data.message);\n                }\n            } catch (e) {\n                toast.error(\"Something Went Wrong!\");\n            }\n\n        } else {\n            toast.error(\"Form Invalid!\");\n        }\n    }\n    const changePassword = async () => {\n        history.push('/reset-password')\n    }\n    return (\n        <form autoComplete=\"off\" action=\"\" method=\"post\" >\n            <ToastContainer />\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Otp Code</label>\n                <input type=\"email\" className=\"form-control\" name=\"otpCode\" maxLength=\"4\" autoComplete=\"off\" value={inputField.otpCode} onChange={inputHandler} />\n                {\n                    errField.otpCodeErr.length > 0 && <span className=\"error\">{errField.otpCodeErr}</span>\n                }\n            </div>\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Password</label>\n                <input type=\"password\" className=\"form-control\" name=\"password\" autoComplete=\"off\" value={inputField.password} onChange={inputHandler} />\n                {\n                    errField.passwordErr.length > 0 && <span className=\"error\">{errField.passwordErr}</span>\n                } \n            </div>\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Confirm Password</label>\n                <input type=\"password\" className=\"form-control\" name=\"cpassword\" autoComplete=\"off\" value={inputField.cpassword} onChange={inputHandler} />\n                {\n                    errField.cpasswordErr.length > 0 && <span className=\"error\">{errField.cpasswordErr}</span>\n                } \n            </div>\n            <div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={submitButton}>Change Password </button>&nbsp;\n                            <Link to=\"/login\"> <button type=\"button\" className=\"btn btn-success\">Back</button></Link>\n            </div>\n        </form>\n\n    )\n}\n\nexport default PasswordForm\n"]},"metadata":{},"sourceType":"module"}